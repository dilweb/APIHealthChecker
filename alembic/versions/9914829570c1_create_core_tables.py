"""create core tables

Revision ID: 9914829570c1
Revises: f2a2a2524f57
Create Date: 2025-10-08 09:19:05.090593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9914829570c1'
down_revision: Union[str, Sequence[str], None] = 'f2a2a2524f57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('request_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(length=8), nullable=False),
    sa.Column('path', sa.String(length=512), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_request_logs_created', 'request_logs', ['created_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=250), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_tg_id'), 'users', ['tg_id'], unique=True)
    op.create_table('monitors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('expected_status', sa.Integer(), nullable=False),
    sa.Column('interval_s', sa.Integer(), nullable=False),
    sa.Column('timeout_ms', sa.Integer(), nullable=False),
    sa.Column('is_paused', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("method IN ('GET','POST','HEAD','PUT','DELETE')", name='ck_monitor_method_valid'),
    sa.CheckConstraint('interval_s BETWEEN 10 AND 86400', name='ck_monitor_interval_range'),
    sa.CheckConstraint('timeout_ms BETWEEN 100 AND 60000', name='ck_monitor_timeout_range'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'url', name='uq_monitor_user_url')
    )
    op.create_index('ix_monitor_user_created', 'monitors', ['user_id', 'created_at'], unique=False)
    op.create_table('checks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monitor_id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('ok', sa.Boolean(), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.CheckConstraint('latency_ms >= 0', name='ck_check_latency_nonnegative'),
    sa.CheckConstraint('status_code BETWEEN 100 AND 599', name='ck_check_status_range'),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_checks_monitor_ts', 'checks', ['monitor_id', 'ts'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_checks_monitor_ts', table_name='checks')
    op.drop_table('checks')
    op.drop_index('ix_monitor_user_created', table_name='monitors')
    op.drop_table('monitors')
    op.drop_index(op.f('ix_users_tg_id'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_request_logs_created', table_name='request_logs')
    op.drop_table('request_logs')
    # ### end Alembic commands ###
